{"version":3,"sources":["api.tsx","components/User.tsx","components/CommentList.tsx","components/PostItem.tsx","components/PostList.tsx","App.tsx","index.tsx"],"names":["BASE_URL","preparedPostList","a","Promise","all","fetch","then","posts","json","users","comments","map","post","user","find","id","userId","filter","comment","postId","User","name","email","address","className","href","street","suite","city","zipcode","CommentsList","body","PostItem","title","key","PostList","App","useState","setPosts","loading","setLoading","loadingFirstPage","setLoadingFirstPage","searchQuery","setSearchQuery","filterQuery","setFilterQuery","visiblePosts","useMemo","toLowerCase","includes","setFilterQueryWithDebounce","useCallback","debounce","type","placeholder","value","onChange","event","target","onClick","setTimeout","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a78928f0.chunk.js","sourcesContent":["const BASE_URL = 'https://jsonplaceholder.typicode.com';\n\nconst getPosts = () => {\n  return fetch(`${BASE_URL}/posts`)\n    .then(posts => posts.json());\n};\n\n// const getPosts = async () => {\n//   const posts = await fetch(`${BASE_URL}/posts`);\n//   return posts.json();\n// };\n\nconst getUsers = () => {\n  return fetch(`${BASE_URL}/users`)\n    .then(users => users.json());\n};\n\nconst getComments = () => {\n  return fetch(`${BASE_URL}/comments`)\n    .then(comments => comments.json());\n};\n\nexport const preparedPostList = async () => {\n  const [posts, users, comments] = await Promise.all([\n    getPosts(), getUsers(), getComments(),\n  ]);\n\n  return posts.map((post: Post) => {\n    return {\n      ...post,\n      user: users.find((user: User) => user.id === post.userId),\n      comments: comments.filter((comment: Comment) => comment.postId === post.id),\n    };\n  });\n};\n","import React from 'react';\n\ntype Props = {\n  user: User;\n};\n\nexport const User: React.FC<Props> = ({ user }) => {\n  const {\n    name,\n    email,\n    address,\n  } = user;\n\n  return (\n    <div className=\"personalInfo\">\n      <h3 className=\"personalInfo__name\">\n        {name}\n      </h3>\n      <p className=\"personalInfo__email\">\n        <a href={`mailto=${email}`}>\n          {email}\n        </a>\n      </p>\n      <address className=\"personalInfo__address\">\n        <span>\n          {address.street}\n          {address.suite}\n        </span>\n        <span>{address.city}</span>\n        <span>{address.zipcode}</span>\n      </address>\n    </div>\n  );\n};\n","import React from 'react';\n\ntype Props = {\n  comment: Comment;\n};\n\nexport const CommentsList: React.FC<Props> = ({ comment }) => {\n  const {\n    name,\n    body,\n    email,\n  } = comment;\n\n  return (\n    <div>\n      <h3>\n        {name}\n      </h3>\n      <p>\n        <a href={`mailot:${email}`}>\n          {email}\n        </a>\n      </p>\n      <p>\n        {body}\n      </p>\n    </div>\n  );\n};\n","import React from 'react';\nimport { User } from './User';\nimport { CommentsList } from './CommentList';\n\ntype Props = {\n  post: PostsFromServer;\n};\n\nexport const PostItem: React.FC<Props> = ({ post }) => {\n  const {\n    title,\n    body,\n    user,\n    comments,\n  } = post;\n\n  return (\n    <div>\n      <h2>{title}</h2>\n      <p>{body}</p>\n      <section className=\"post__personalInfo\">\n        <User user={user} />\n      </section>\n      <section className=\"comments\">\n        <ul className=\"comment__list\">\n          {comments.map((comment: Comment) => (\n            <li className=\"comment__item\" key={comment.id}>\n              <CommentsList comment={comment} />\n            </li>\n          ))}\n        </ul>\n      </section>\n    </div>\n  );\n};\n","import React from 'react';\nimport { PostItem } from './PostItem';\n\ntype Props = {\n  posts: PostsFromServer[];\n};\n\nexport const PostList: React.FC<Props> = ({ posts }) => {\n  return (\n    <>\n      <ul className=\"post__list\">\n        {posts.map(post => (\n          <li className=\"post__item\" key={post.id}>\n            <PostItem post={post} />\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n","import React, { useState, useMemo, useCallback } from 'react';\nimport './App.css';\nimport debounce from 'lodash/debounce';\nimport { preparedPostList } from './api';\nimport { PostList } from './components/PostList';\n\n\nconst App: React.FC = () => {\n  const [posts, setPosts] = useState<PostsFromServer[]>([]);\n  const [loading, setLoading] = useState<boolean>(false);\n  const [loadingFirstPage, setLoadingFirstPage] = useState<boolean>(false);\n  const [searchQuery, setSearchQuery] = useState<string>('');\n  const [filterQuery, setFilterQuery] = useState<string>('');\n\n  const downLoadPosts = () => {\n    setLoading(true);\n    setTimeout(() => {\n      preparedPostList().then(post => setPosts(post));\n      setLoading(false);\n      setLoadingFirstPage(true);\n    }, 500);\n  };\n\n  const visiblePosts = useMemo(() => {\n    const filteredPosts = [...posts].filter(post => {\n      const title = post.title.toLowerCase();\n      const body = post.body.toLowerCase();\n\n      return (title + body).includes(filterQuery.toLowerCase());\n    });\n\n    return filteredPosts;\n  }, [posts, filterQuery]);\n\n  const setFilterQueryWithDebounce = useCallback(\n    debounce(setFilterQuery, 1000), [],\n  );\n\n\n  const handdleSearchPhrase = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setSearchQuery(event.target.value);\n    setFilterQueryWithDebounce(event.target.value);\n  };\n\n  return (\n    <>\n      <h1>Dynamic list of posts</h1>\n      {loadingFirstPage\n        ? (\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"search-query\"\n              className=\"form-control mr-sm-2\"\n              placeholder=\"Search\"\n              value={searchQuery}\n              onChange={handdleSearchPhrase}\n            />\n          </div>\n        )\n        : (\n          <button type=\"button\" className=\"btn btn-primary\" onClick={downLoadPosts}>\n            {loading ? 'Loading...' : 'Load Todos'}\n          </button>\n        )}\n      <PostList posts={visiblePosts} />\n    </>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}